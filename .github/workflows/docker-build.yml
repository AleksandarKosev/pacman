name: Build Docker Image

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Check out the repository to the runner
    - name: Check out the repository
      uses: actions/checkout@v3

    # Set up Docker Buildx (optional, but useful for multi-platform builds)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to Docker Hub (optional, if you want to push the image)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        #Curentlly this secrets are at, https://github.com/AleksandarKosev/pacman/settings/secrets/actions
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build the Docker image, using current authenticated github user.
    - name: Build the Docker image
      run: |
        docker build -f Dockerfile -t aleksandarkosev/pacman:latest . --build-arg VERSION=1

    # Download Trivy, used for finding and reporting vulnerabilities.
    - name: Install Trivy
      run: |
        wget https://github.com/aquasecurity/trivy/releases/download/v0.36.0/trivy_0.36.0_Linux-64bit.deb
        sudo dpkg -i trivy_0.36.0_Linux-64bit.deb
      
    #This part of the action is ran when pushing code.
    #The condition is, if Trivy detects CRITICAL vulnerabilities, it would abort the workflow.
    - name: Run Trivy Scan(Pushing Changes to repo.)
      if: github.event_name == 'push'
      run: |
        trivy image --severity CRITICAL --exit-code 1 --no-progress aleksandarkosev/pacman:latest
    
    - name: Run Trivy Scan(Pull Request)
      if: github.event_name == 'pull'
      run: |
        trivy image aleksandarkosev/pacman:latest
        docker build -f Dockerfile -t aleksandarkosev/pacman:latest .
        docker run -d -p 8080:8080 aleksandarkosev/pacman:latest
    
    # Push the Docker image to Docker Hub
    - name: Push the Docker image
      if: github.event_name == 'push'
      run: |
        docker push aleksandarkosev/pacman:latest

  # Update Docker Hub Repository Description
    - name: Update Docker Hub Repository Description
      if: github.event_name == 'push'
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        REPOSITORY: "aleksandarkosev/pacman"
        DESCRIPTION: "This repository contains the Pacman game built with JavaScript and hosted locally using a Python script. The project is containerized using Docker and includes a CI/CD pipeline with GitHub Actions that builds, scans, and deploys the image to Docker Hub."
      run: |
        curl -X PATCH "https://hub.docker.com/v2/repositories/aleksandarkosev/pacman/" \
          -u "$DOCKER_USERNAME:$DOCKER_PASSWORD" \
          -H "Content-Type: application/json" \
          -d '{"description": "'"$DESCRIPTION"'"}'